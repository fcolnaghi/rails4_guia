<script src="http://maps.google.com/maps/api/js?v=3.13&amp;sensor=false&amp;libraries=geometry" type="text/javascript"></script>
<script src='http://google-maps-utility-library-v3.googlecode.com/svn/tags/markerclustererplus/2.0.14/src/markerclusterer_packed.js' type='text/javascript'></script>
<script src='http://google-maps-utility-library-v3.googlecode.com/svn/trunk/richmarker/src/richmarker-compiled.js' type='text/javascript'></script>
<script src='http://google-maps-utility-library-v3.googlecode.com/svn/tags/infobox/1.1.9/src/infobox_packed.js' type='text/javascript'></script>

<h1>Listing places</h1>

<table>
  <thead>
    <tr>
      <th>Title</th>
      <th>Description</th>
      <th>Lat</th>
      <th>Lon</th>
      <th>Score</th>
      <th></th>
      <th></th>
      <th></th>
    </tr>
  </thead>
   <tbody>
      <% @places.each do |place| -%>
      <tr>
        <td><%= place.title %></td>
        <td><%= place.description %></td>
        <td><%= place.lat %></td>
        <td><%= place.lon %></td>
        <td><%= place.address %></td>

        <td><%= link_to 'Show', place %></td>
        <td><%= link_to 'Edit', edit_place_path(place) %></td>
        <td><%= link_to 'Destroy', place, method: :delete, data: { confirm: 'Are you sure?' } %></td>
      </tr>
    <% end %>
  </tbody>
</table>

<div style='width: 800px;'>
  <div id="map" style='width: 800px; height: 400px;'></div>
</div>

<div style='width: 800px;'>
  <div id="directions" style='width: 800px; height: 400px;'></div>
</div>



<br>

<%= link_to 'New Place', new_place_path %>


<script type="text/javascript">

var directionsDisplay = new google.maps.DirectionsRenderer();
var directionsService = new google.maps.DirectionsService();

function calcRoute() {
  var origin      = new google.maps.LatLng( <%= @places.first.lat %>, <%= @places.first.lon %>);
  var destination = new google.maps.LatLng(<%= @places.last.lat %>, <%= @places.last.lon %>);

  var request = {
      origin:      origin,
      destination: destination,
      travelMode:  google.maps.TravelMode.WALKING
  };
  directionsService.route(request, function(response, status) {
    if (status == google.maps.DirectionsStatus.OK) {
      console.log(response.routes[0].legs[0].distance.text);

    for (var i = 0; i < response.routes[0].legs[0].steps.length; i++) {
      console.log(response.routes[0].legs[0].steps[i].instructions);
    }

    directionsDisplay.setDirections(response);
    }
  });
}

calcRoute();

var handler = Gmaps.build('Google');
handler.buildMap({ internal: {id: 'directions'}}, function(){
  directionsDisplay.setMap(handler.getMap());
});

var handler2 = Gmaps.build('Google');
handler2.buildMap({ provider: {}, internal: {id: 'map'}}, function(){
  markers = handler2.addMarkers(<%=raw @hash.to_json %>);
  handler2.bounds.extendWith(markers);
  handler2.fitMapToBounds();
});




</script>